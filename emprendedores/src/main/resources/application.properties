#logging.level.root=DEBUG
logging.level.root=INFO

spring.mvc.view.prefix: /
spring.mvc.view.suffix: .jsp
spring.messages.basename=validation

#puerto Tomcat
server.port=81

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database 
#spring.datasource.url = jdbc:sqlserver://emprendedores.ddns.net:50146;databaseName=SEMINARIO2
#spring.datasource.url = jdbc:sqlserver://190.245.65.50:50146;databaseName=SEMINARIO2
#spring.datasource.url = jdbc:sqlserver://10.0.0.2:50146;databaseName=SEMINARIO2
#spring.datasource.url = jdbc:sqlserver://10.0.0.2:50146;databaseName=SEMINARIOTEST
spring.datasource.url = jdbc:sqlserver://localhost:50146;databaseName=SEMINARIO2

# Username and password
spring.datasource.username = SEMINARIO2
spring.datasource.password = SEMINARIO2

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServerDialect

spring.jpa.properties.hibernate.enable_lazy_load_no_trans: true